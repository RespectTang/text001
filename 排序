/************************************************************************************************************************/
/*
7.改进冒泡排序 
题目内容：
对传统冒泡算法进行改进，策略1：若一趟中无交换，说明序列有序则提前算法；
策略2：在排序过程中发现部分序列未曾交换过，则下次不参与比较。
要求集成这两种改进策略写出改进的冒泡排序算法。
输入描述
输入数据的个数n，再输入n个数
输出描述
输出改进算法排升序序列过程中的数据比较次数和交换次数之和。
输入样例
样例1:6 1 2 3 6 4 5
样例2:7 1 2 3 6 7 4 5
输出样例
样例1:8
样例2:13
*/ 

#include<stdio.h>
int main()
{
	int n,a[100],i,j,k,q=0,p=0,temp;//比较次数p，交换次数q; 
	int Pos,Temp=0;//做标记 
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);
	}
	
	for(i=0;i<n-1;i++)
	{
		Pos=Temp;//从之前的有序序列开始比较 
		for(j=n-1;j>Pos;j--)
		{
			if(a[j]<=a[j-1])
			{
				temp=a[j];
				a[j]=a[j-1];
				a[j-1]=temp;
				
				Temp=j;//存储最后的比较 
			q++;	
			}p++;
		}
		
		if(Pos==Temp) 
			break;	
	}
	/*for(i=0;i<n;i++)
	{
		printf("%d ",a[i]);
	}*/
	printf("\n%d",p+q);	
	
	return 0;
}
/************************************************************************************************************************/
/************************************************************************************************************************/
/************************************************************************************************************************/
/************************************************************************************************************************/
/************************************************************************************************************************/
/************************************************************************************************************************/
/************************************************************************************************************************/
