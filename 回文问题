/*回文问题案例及实现方法*/
/*******************************************************************************************************/
/*
2.特殊回文数 (15分) 
题目内容：
123321是一个非常特殊的数，它从左边读和从右边读是一样的。
输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 
输入描述
输入一行，包含一个正整数n。
输出描述
按从小到大的顺序输出满足条件的整数，每个整数占一行。
输入样例
52
输出样例
899998
989989
998899
程序代码

*/


#include<stdio.h>
int main()
{
	int n,i,j,x,f,temp;
	scanf("%d",&n);
	for(f=0,x=10000,i=x+1;i<1000000;i++)
	{
		if(i>99999)
		x=100000;
		if(i%10!=i/x%10||i/10%10!=i*10/x%10||i/100%10!=i*100/x%10)//判断前后数字是否一致 
		continue;
		
		for(temp=0,j=i;j;temp+=j%10,j/10);
		if(n==temp)
		{
			printf("%d\n",i);
			f=1;
		}
	 } 
	
	return 0;
}

/*******************************************************************************************************/
上面问题的暴力解法
#include<stdio.h>
int main()
{
	int n,i,j,sum;
	char str[10];
	scanf("%d",&n);
	for(i=10000;i<1000000;i++)
	{
		sprintf(str,"%d",i);
		sum=0;
		for(j=0;str[j];j++)
		sum+=str[j]-'0';
		if(sum!=n) 
		continue;
		if(i<100000&&str[0]==str[4]&&str[1]==str[3])
		printf("%d\n",i);
		else if(i>=100000&&str[0]==str[5]&&str[1]==str[4]&&str[2]==str[3])
		printf("%d\n",i);
	}
	
	return 0;
}

/*******************************************************************************************************/
判断一个字符串是否是回文
#include<stdio.h>
#include<string.h>
int main()

{
	char str1[100],str2[100],y,*p,*q;
	int len1,len2,i,j;
	gets(str1);
	
	len1=strlen(str1);

	
	for(i=0,j=0;i<len1;i++)//将字母元素存入str2,并将大写字母转化为小写字母 
	{
		if(str1[i]>='a'&&str1[i]<='z')
		{
			str2[j]=str1[i];
			j++;
		}
		else if(str1[i]>='A'&&str1[i]<='Z')
		{
			str2[j]=str1[i]+32;
			j++;	
		}
		else
		continue;	
	}
	
	len2=strlen(str2);
	p=str2;
//	if(len2%2==0)
/*	for(j=0,i=0;j<len2;j++)
	{
		if((p+j!=p+len2-j)&&(p+j!=p+len2-j+32)&&(p+j+32==p+len2-j))
		break;	
		else
		i++;
	}
	if(i==len2/2)
	printf("Yes");
	else
		printf("NO");*/	
		for(i=0,j=len2-1;i<j;i++,j--)
		{
			if(p[i]!=p[j])
			break;	
		}
		if(i>=j)
		printf("Yes");
		else
		printf("No");

	return 0;
}

