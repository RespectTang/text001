/*没有什么算法含量，只是单纯的逻辑题*/
/***********************************************************************************************************************/
/*
链接：https://www.nowcoder.com/acm/contest/77/B
来源：牛客网
题目描述
给一个数列，会有多次询问，对于每一次询问，会有两种操作：    
1：给定两个整数x, y, 然后在原数组的第x位置上加y；    
2：给定两个整数l，r，然后输出数组从第l位加到第r位数字的和并换行     
输入描述:
第一行有两个整数n, m（1 <= n, m <= 100000）代表数列的长度和询问的次数第二行n个数字，
对于第i个数字a[i]，(0<=a[i]<=100000)。接下来m行，每一行有三个整数f, x, y。
第一个整数f是1或者是2，代表操作类型，如果是1，接下来两个数x,y代表第x的位置上加y，
如果是2，则求x到y的和，保证数据合法。
输出描述:
输出每次求和的结果并换行
示例1
输入
10 2
1 2 3 4 5 6 7 8 9 10
1 1 9
2 1 10
输出
64
*/
#include<stdio.h>
int main()
{
	int n,m,a[500000],f,x,y;
	int i,j,k;
	scanf("%d%d",&n,&m);
	for(i=1;i<=n;i++)
	{
		scanf("%d",&a[i]);
	}
	while(m--)
	{
		scanf("%d%d%d",&f,&x,&y);
		if(f==1)
		{
			a[x]+=y;
		}
		if(f==2)
		{
			int s=0;
			for(j=x;j<=y;j++)
			{
				s+=a[j];
			}
			printf("%d\n",s);
		}
	}
	return 0;
}
/***********************************************************************************************************************/
/*
2.钱组合数 (15分) 
C时间限制：3?毫秒?|? C内存限制：3000?Kb
题目内容：
给你足够多的1，2，5面值的钱币，输入一个钱数n，设计一个程序使能够计算出所有的组合！
输入描述
钱数N
输出描述
所有的组合数的个数
输入样例
20
输出样例
29
*/

#include<stdio.h>
int main()
{
	int money,a,b,c,i;
	scanf("%d",&money);
	i=0;
	for(a=0;a<=money;a++)
	for(b=0;b<=money/2;b++)
	for(c=0;c<=money/5;c++)
	{
	if(1*a+2*b+c*5==money)
	i=i+1;
	}
	printf("%d",i);
	return 0;
 } 
/***********************************************************************************************************************/
/*
题目内容：
一种Playfair密码变种加密方法如下：首先选择一个密钥单词（称为pair）
（字母不重复，且都为小写字母），
然后与字母表中其他字母一起填入至一个5x5的方阵中，填入方法如下：
1.首先按行填入密钥串。
2.紧接其后，按字母序按行填入不在密钥串中的字母。
3.由于方阵中只有25个位置，最后剩下的那个字母则不需变换。
如果密钥为youandme，则该方阵如下： 
y o u a n
d m e b c
f g h i j
k l p q r
s t v w x
在加密一对字母时，如am，在方阵中找到以这两个字母为顶点的矩形：
o u a 
m e b 
这对字母的加密字母为该矩形的另一对顶点，如本例中为ob。
请设计程序，使用上述方法对输入串进行加密，并输出加密后的串。
另外有如下规定：
1、一对一对取字母，如果最后只剩下一个字母，则不变换，直接放入加密串中；
2、如果一对字母中的两个字母相同，则不变换，直接放入加密串中；
3、如果一对字母中有一个字母不在正方形中，则不变换，直接放入加密串中；
4、如果字母对出现在方阵中的同一行或同一列，如df或hi，
则只需简单对调这两个字母，即变换为fd或ih；
5、如果在正方形中能够找到以字母对为顶点的矩形，
假如字母对为am，则该矩形的另一对顶点字母中，
与a同行的字母应在前面，在上例中应是ob；
同样若待变换的字母对为ta，则变换后的字母对应为wo；
6、本程序中输入串均为小写字母，并不含标点、空格或其它字符。
解密方法与加密相同，即对加密后的字符串再加密，将得到原始串。
输入描述
从控制台输入两行字符串，第一行为密钥单词（长度小于等于25，字母不重复，且都为小写字母），
第二行为待加密字符串（长度小于等于50），两行字符串末尾都有一个回车换行符，
并且两行字符串均为小写字母，不含其它字符。
输出描述
在标准输出上输出加密后的字符串。
输入样例
youandme
welcometohangzhou
输出样例
vbrmmomvugnagzguu
*/ 
#include<stdio.h>
#include<string.h>

char key[26],pair[5][5];
char str[51];	
	int found(char alpha);//寻找函数，查找是否重复
	void creat();//构造密钥方阵 
	void fun();
	int rtline(char alpha);//返回行 
	int rtcolumn(char alpha);//返回列 	
int main()
{

	gets(key);
	gets(str);
	creat();
	fun();
	
	return 0;
}

int found(char alpha)//查找是否重复 
{
	int x,i;
	x=strlen(key);
	for(i=0;i<x;i++)
		if(alpha==key[i])
		return 1;
	return 0;
} 
	
	void creat()//构造矩阵 
	{
	int i,j,m,n,k=0,tag=0;
	for(i=0;i<5&&key[tag];i++)//将密钥的字符输入到矩阵中 
		for(j=0;j<5&&key[tag];j++)
		{
			pair[i][j]=key[tag++];
		}
		
		i--;//返回到输入完密钥的那一行的位置
		for(;i<5;i++)
		{
			for(;j<5;j++)
			{
				if(!found('a'+k))	//如果下一个字母与密钥中的不重复，则将该字母存储于矩阵之后
				{
				pair[i][j]='a'+k;
				k++;
				} 	
				else
				{
				j--; //退位仍然停留在目前的j位置 
				k++;			
				}
			} 
			j=0;//换行归位 
		}
	/*	
		for(i=0;i<5;i++)
		for(j=0;j<5;j++)
		{
		printf("%c ",pair[i][j]);
		if(j==4)
		printf("\n");	
		}
	*/	
	} 
	
int rtline(char alpha)//返回行 
{
	int i,j;
	for(i=0;i<5;i++)
		for(j=0;j<5;j++)
		if(alpha==pair[i][j])
			return i;	
} 
 
int rtcolumn(char alpha)//返回列 
{
	int i,j;
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
		if(alpha==pair[i][j])
			return j;	
		}	
	}
	
	return -1;
}

void fun()
{
	int i;
	char temp;
	for(i=0;i<strlen(str);i+=2)//对str进行两两判断 
	{	
		if(str[i]==str[i+1])//如果相等则不做任何处理 
		{
			continue;
		}
		else if(rtline(str[i])==rtline(str[i+1])||rtcolumn(str[i])==rtcolumn(str[i+1]))
		//如果行相等或者列相等，则进行交换 
		{
		//	printf("i=%d j=%d\n",rtline(str[i]),rtcolumn(str[i]));
			temp=str[i];
			str[i]=str[i+1];
			str[i+1]=temp;	
		} 
		else if(str[i+1]=='\0')//如果 到最后只剩一个,直接退出循环 
		{
			break; 
		}
		
		else if(rtcolumn(str[i])==-1||rtcolumn(str[i+1])==-1)//如果没有找到 
		{
			continue;
		}
		else
		{
			temp=str[i];
			str[i]=pair[rtline(str[i])][rtcolumn(str[i+1])];
			str[i+1]=pair[rtline(str[i+1])][rtcolumn(temp)]; 
		}
			
	}	
puts(str);	
	//	printf("\n");
}
/***********************************************************************************************************************/
/*
链接：https://www.nowcoder.com/acm/contest/77/F
来源：牛客网
题目描述
给你一个数，让他进行巴啦啦能量，沙鲁沙鲁，小魔仙大变身，如果进行变身的数不满足条件的话，就继续让他变身。。。
直到满足条件为止.巴啦啦能量，沙鲁沙鲁，小魔仙大变身：对于一个数，把他所有位上的数字进行加和，得到新的数。
如果这个数字是个位数的话，那么他就满足条件。 
输入描述:
给一个整数数字n(1<=n<=1e9)。
输出描述:
输出由n经过操作满足条件的数
示例1
输入
12
输出
3
*/

#include<iostream>
#include<string.h>
using namespace std;

 int main()
 {
 	char s[100];
	int sum,a[100];
 	int len,k=10,i,j=0;
 	scanf("%s",&s);
 	while(k--)
 	{
 		len=strlen(s); 
 		sum=0;
 		for(i=0;i<len;i++)
 		{
 			sum+=s[i]-'0';
 			s[i]=0;
		 }
		// printf("%d\n",sum);
		 for(i=0;sum>0;i++)
		 {
		 	a[i]=sum%10;
		 	sum=sum/10;
		 //	printf("%d ",a[i]);
		 	s[i]=a[i]+48;
		 }
		 s[i]='\0';
	 }
	  printf("%s",s);
	 //printf("%d",sum[99]);
 	return 0;
 }
/***********************************************************************************************************************/
/*三个数比大小，不用数组实现*/
#include <stdio.h>
int main()
{
int v1,v2,v3,v4;
scanf("%d%d%d",&v1,&v2,&v3);
if(v3>v2)
	{
	v4=v3;
	v3=v2;
	v2=v4; 
	}
if(v3>v1)
	{
		v4=v3;
		v3=v1;
		v1=v4;
	}
if(v2>v1)
	{
		v4=v2;
		v2=v1;
		v1=v4;
	}
printf("%d%d%d",v1,v2,v3);

return 0;

}
/***********************************************************************************************************************/
/*打印钻石状的图形，输入数字n为行数*/
#include<stdio.h>
int main()
{
	int n,m,p,i,q,a;
	scanf("%d",&n);
	i=1;
	do
	{
				
	m=2*i-1;
	p=1;
	q=n-i;
	a=1;
			while(a<=q)
				{
				printf(" ");
				a=a+1;
				}
			do
			{ 
			q=n-i;
			a=1;
			
			printf("*");
			p=p+1;
			}while(p<=m);
			printf("\n");
	i=i+1;		
	}while(i<=n);
	i=n;
	do
	{
	m=4*n-2*i-3;
	p=1;
	q=i-n+1;
	a=1;
			while(a<=q)
			{
			printf(" ");
			a=a+1;
			}
			do
			{

			printf("*");
			p=p+1;
			}while(p<=m);
			printf("\n");
	i=i+1;
	}while((i>=n)&&(i<2*n-1));
	
	return 0;
}


/***********************************************************************************************************************/
/*
链接：https://www.nowcoder.net/acm/contest/75/G
来源：牛客网
题目描述
给出一个数n，求1到n中，有多少个数不是2 5 11 13的倍数。 
输入描述:
输入一个数n，1<=n<=10^18.
输出描述:
输出不是2 5 11 13的倍数的数共有多少。
输入
15
输出
4
说明
1 3 7 9
*/ 

#include<iostream>
using namespace std;

int main()
{
	int n;
	scanf("%d",&n);
	int i,j,k=0;
	for(i=0;i<n;i++)
	{
		if(i%2==0)
			continue;
		else if(i%5==0)
			continue;
			else if(i%13==0)
				continue;
				else if(i%11==0)
					continue;
					else k++;
		
	}
	printf("%d",k);
	return 0;
}
/***********************************************************************************************************************/




