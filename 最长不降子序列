/*
题目内容：
某国为了防御敌国的导弹袭击，研发出一套导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发拦截
炮弹能够到达任意的高度，但是以后每一发拦截炮弹都不能高于前一发的高度。某天，雷达捕捉到敌国的多枚导弹来
袭。
输入描述
输入的第一行为导弹的个数n (0<n<10000),接下来的一行为导弹依次飞来的高度h（不大于
30000 的正整数）
输出描述
输出最多拦截的导弹个数。
输入样例
6
5 3 2 4 1 3
输出样例
4
题目分析：求最长降序子序列 
*/

#include<stdio.h>
#include<string.h>

int Height[10000]; 
int MaxLen[10000];

void LIS(int k)//定义计算最长递减子列函数
{
	memset(MaxLen,0,sizeof(MaxLen));
	for(int i=1;i<=k;i++)
	{
		MaxLen[i]=1;//遍历其前所有导弹高度 
		for(int j=1;j<i;j++)//如果当前导弹高度小于等于j号导弹 
		{
			if(Height[i]<=Height[j])//把当前导弹放在j号导弹之后，其最长不增子序列长度为j号导弹结尾的最长不增子序列长度+1
			{
			int preMax=MaxLen[j]+1;
			if 	(preMax>MaxLen[i])
				MaxLen[i]=preMax;
			}		
		}
	 } 
}
	

int main()
{
	int N,i;
	scanf("%d",N);//while(scanf("%d",&N)!=EOF)//输入导弹高度
	for(i=1;i<=N;i++)
	{
		scanf("%d",&Height[i]);
	 } 
	 LIS(N);
	 int Max=-1;//输出最长不增子序列的长度即能拦截的导弹数
	 for(i=1;i<=N;i++)
	 {
	 	if(Max<MaxLen[i])
	 {
	 	Max=MaxLen[i];
	  } 

	 }
	 if(N!=0)
	 printf("%d\n",Max);
	 
	  
	return 0;
}
/******************************************************************************************************************/
/*
6.最长不降子序列 (15分) 
题目内容：
所谓子序列，就是在原序列里删掉若干个元素后剩下的序列，
以字符串"abcdefg"为例子，去掉bde得到子序列"acfg"现在的问题是，
给你一个数字序列，你要求出它最长的单调不降子序列。
输入描述
多组测试数据，每组测试数据第一行是n(1<=n<=10000)，表示n个数据，
下一行是n个比10^9小的正整数
输出描述
对于每组测试数据输出一行，每行内容是最长的单调不降子序列
的长度
输入样例
5
1 2 4 8 16
5
1 10 4 9 7
9
0 0 0 1 1 1 5 5 5
输出样例
5
3
9
*/
#include<stdio.h>
int main()
{
	int n,a[10000],i,j,k;
	int m[10000];
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);
	}
	i=0;
	for(i=0;i<n;i++)
	{
		m[i]=1;
		for(j=0;j<i;j++)
		{
			if(a[j]<=a[i]&&m[j]+1>=m[i])//将a[i]作为每一趟的最大值，向前取小 
				m[i]=m[j]+1;
		}
	} 
	
	int max=m[0];
	for(i=0;i<n;i++)
	{
		//printf(" k=%d\n",m[i]);
		if(m[i]>=max)
		{
			max=m[i];
		}
	}
	
	printf("%d",max);
	return 0;
}
