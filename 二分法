万恶的剪网线问题
#include<stdio.h>
int main()
{
	int n,k,b[10000],i,max=0,mid,min=0,c[10000],j=0,s;
	double a[10000];
	scanf("%d%d",&n,&k);
	for(i=0;i<n;i++)
	{
		scanf("%lf",&a[i]);
		b[i]=a[i]*100;
		if(b[i]>max)
			max=b[i];
	}
	while(min<=max)
	{
		mid=(max+min)/2;
		s=0;
		for(i=0;i<n;i++)
			s=s+b[i]/mid;
		if(s==k)
		{
			c[j]=mid;
			min=mid+1;
			j++;
		}
		else
		{
			if(s<k)
				max=mid-1;
			else if(s>k)
				min=mid+1;
		}
	}
	max=c[0];
	if(j==1)
		printf("%.2lf",1.0*max/100);
	else
	{
		for(i=1;i<j;i++)
			if(c[i]>max)
				max=c[i];
		printf("%.2lf",1.0*max/100);
	}
	return 0;
}
/**********************************************************************************************************/
/*
12.二分-跳过去 (10分)
题目内容：
“跳过去”比赛将在一条河中进行，河中分布着一些大石头。组委会选择了两块石头作为比赛起点和终点。在起点和终点之间，
有 N 块石头（不含起点和终 点的岩石）。比赛时选手们将从起点出发，每一步跳向下一块石头，直到终点。
为了提高比赛难度，组委会计划移走一些石头，使得选手们在比赛过程中的最短跳跃距离尽可能长。由于预算限制，组委会至多
从起点和终点之间移走 M 块石头（不能移走起点和终点的石头）。
输入描述
输入第一行包含3个整数 L,N，M，表示起点和终点的距离，之间的岩石数，以及组委会至多移走的岩石数。
接下来 N 行，每行一个整数，第 i 行的整数0<d?[i]<L, 表示中间依次的每块石头与起点的距离，保证
d[i]<d[i+1]
其中L<=10^9, M<N-2<=10^5
输出描述
最短跳跃距离的最大值
输入样例
25 5 2
2
11
14
17
21
输出样例
4
*/ 
#include <iostream>
#include <cstdio>
using namespace std;

int dis[50010], L, n, m;

bool check(int mid)
{
    int cnt = 0, last = 0;
    for(int i = 1; i <= n; i++)
    {
        if(dis[i] - last < mid) cnt++;
        else last = dis[i]; 
    }
    if(cnt > m) return false;
    return true;
}

int main()
{
    scanf("%d%d%d", &L, &n, &m);
    for(int i = 1; i <= n; i++) scanf("%d", &dis[i]);
    if(!n)
    {
        printf("%d", L);
        return 0;
    }
    dis[++n] = L;
    int l = 0, r = L, mid;
    while(l + 1 < r)
    {
        mid = (l + r) / 2;
        if(check(mid)) l = mid;
        else r = mid;
    }
    printf("%d", l);
    return 0;
}
/**********************************************************************************************************/
/*
题目内容：
 设a[n]是已排序的数组，n小于100，请改写二分搜索算法，使得当搜索元素x不在数组中时，
返回小于x的最大元素的位置i和大于x的最小位置j。当搜索元素在数组中时，
i和j相同，均为x在数组中的位置。
输入描述
第一行：有序数组长度n和待搜索值x。  
第二行：输入n个数组成的有序数组。
输出描述
第一行：输出i和j（都为下标）。
输入样例
6 5
1 3 4 6 7 8
输出样例
2 3
*/
#include<stdio.h>
int main()
{
	int a[100],n,x,i,j,left,right,mid;
	scanf("%d%d",&n,&x);
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);
	}
	i=0;
	left=0;
	right=n-1;
	while(left<=right)
	{
		mid=(left+right)/2; 
		if(x>a[mid])
		{
			left=mid+1;
		}
		if(x<a[mid])
		{
			right=mid-1;
		}
		if(x==a[mid])
		{
			i=mid;
			j=mid;
			printf("%d %d",i,j);
			break;
		}
	}
	while(left>right)
	{
		printf("%d %d",right,left);
		break;
	}

	return 0;
}
/**********************************************************************************************************/
/*
6.折半查找 (20分) 
题目内容：
折半查找是对有序表进行快速查找的一种方法，通过一次比较能减少一半的比较区域。
输入描述
在第一行输入数据元素个数n，第二行输入n个数据，在第三行输入待查数据
输出描述
查找成功输出"YES"，然后输出查找次数；若查找失败则输出"NO"，后输出查找次数。
输入样例
5
1 3 5 6 8
6
输出样例 
YES 2
*/ 
#include<stdio.h>

 /*int fun(int m[],int n,int x)
 {
 	int i=0,left,right,mid;
 	left=0;
 	right=n-1;
 	
 	while(left<=right)
 	{
 		mid=(left+right)/2;
	 	i++;
 		if(x>m[mid])
 		{
 			left=mid+1;
		}
		else if(x<m[mid])
		{
			right=mid-1;
		}
		else if(x==m[mid])
		{
			printf("YES %d",i);
			break; 
		}
	
 	}
 	while(left>right)
	 {
 		printf("NO %d",i);
 		break;
	 }
 	
 }*/


 int main()
 {
 	int n,i,m[100],x,left,right,mid;
 	scanf("%d",&n);
 	for(i=0;i<n;i++)
 	{
 		scanf("%d",&m[i]);
	}
	scanf("%d",&x);
 
 
  	i=0;
 	left=0;
 	right=n-1;
 	
 	while(left<=right)
 	{
 		mid=(left+right)/2;
	 	i++;
 		if(x>m[mid])
 		{
 			left=mid+1;
		}
		else if(x<m[mid])
		{
			right=mid-1;
		}
		else if(x==m[mid])
		{
			printf("YES %d",i);
			break; 
		}
	
 	}
 	while(left>right)
	 {
 		printf("NO %d",i);
 		break;
	 }
 	
 	
 	return 0;
 }  
/**********************************************************************************************************/
/*
疯牛
时间限制：1000 ms  |  内存限制：65535 KB 
难度：4

描述 
农夫 John 建造了一座很长的畜栏，它包括N (2 <= N <= 100,000)个隔间，这些小隔间依次编号为x1,...,xN (0 <= xi <= 1,000,000,000).
但是，John的C (2 <= C <= N)头牛们并不喜欢这种布局，而且几头牛放在一个隔间里，他们就要发生争斗。为了不让牛互相伤害。John决定自己给牛分配隔间，使任意两头牛之间的最小距离尽可能的大，那么，这个最大的最小距离是什么呢？ 

输入
有多组测试数据，以EOF结束。
第一行：空格分隔的两个整数N和C
第二行——第N+1行：分别指出了xi的位置
输出
每组测试数据输出一个整数，满足题意的最大的最小值，注意换行。
样例输入
5 3
1
2
8
4
9
样例输出
3
题意：简单的说就是给你一段长度，在这一段中给出m个点，然后在这m个点中选出k个点，让这k个点之间相邻两个点的之间距离的最小值最大
思路：通过二分枚举这个最小值，然后通过贪心的思想找出满足要求的最大的这个最小值
*/

#include <stdio.h>
#include <iostream>
#include <algorithm>

using namespace std;

int n,c;
int pos[10000];

bool judge(int k)
{
	int cnt=1;
	int st=pos[0];
	for(int i=1;i<n;++i)
	{
		if(pos[i]-st>=k)
		{
			++cnt;
			if(cnt>=c)
			return true;
			st=pos[i];
		}
	}
	
	return false;
}

int binary_search()
{
	int left=0;
	int right=pos[n-1]-pos[0];//
	int mid=(left+right)>>1;//
	while(left<=right)
	{
		if(judge(mid))
			left=mid+1;
		else
			right=mid-1;
		mid=(left+right)>>1;
	}
	return left-1;
	
}

int main()
{
	while(~scanf("%d%d",&n,&c))
	{
		for(int i=0;i<n;i++)
			scanf("%d",pos[i]);
		sort(pos,pos+n);
		printf("%d\n",binary_search());
	}
	
	return 0;
}
